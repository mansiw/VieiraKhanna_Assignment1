URL <- paste0('https://www.bundeswahlleiter.de/de/',
'bundestagswahlen/BTW_BUND_13/veroeffentlichungen/ergebnisse/kerg.csv')
download.file(URL, 'elec_data.csv')
e <- read.table("elec_data.csv", skip = 5, encoding="UTF8-MAC", sep=";",
quote="", stringsAsFactors=FALSE)
names(e)
names(e)[Old_names]  <- New_names
Old_names <-c(1, 2, 3, 4, 8, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 104,106)
New_names <- c('no', 'district', 'landid', 'eligible', 'voters', 'cdu1',
'cdu2', 'spd1', 'spd2', 'fdp1', 'fdp2', 'dielink1', 'dielinke2', 'greens1',
'greens2', 'csu1', 'csu2', 'pirates1', 'pirates2', 'afd1','afd2')
names(e)[Old_names]  <- New_names
names(e)[Old_names]
e = e[, New_names]
View(e)
View(e)
View(e)
e <- e[- which(e$landid == '99'| e$landid == 'NA'), ]
View(e)
e <- e[- which(e$landid == '99'| e$landid is.na ), ]
e <- e[- which(e$landid == '99'| is.na(e$landid) ), ]
View(e)
e %>% str # are any variables characters although they should be numeric?
library(magrittr)  # for 'piping': more readable code
library(dplyr)  # for using filter()
library(stringr)  # for editing strings
library(stargazer)  # for regression tables
e %>% str # are any variables characters although they should be numeric?
e[, 3:ncol(e)] %>% apply(2, as.numeric)
glimpse(e)
View(e)
ls()
rm(list=ls()) # remove existing lists
data()
data(swiss)
names(swiss)
library(dplyr)
fun_mean <- function(x){sum(x)/length(x)}
fun_mean(x=swiss$Examination)
names(swiss)
length(names(swiss))
plot(swiss$examination, swiss$Education)
plot(swiss$Education, swiss$examination)
cor.test(swiss$Education, swiss$examination)
cor.test(log(swiss$Education), log(swiss$examination)
cdc
cor.test(log(swiss$Education), log(swiss$examination))
cor.test(log(swiss$Education), (swiss$examination))
cor.test(log(swiss$Education),swiss$examination)
cor.test(log(swiss$Education), swiss$Examination)
cor.test(log(swiss$Education), swiss$Examination)
character <- {a,b,c,d,e}
character <- [a,b,c,d,e]
names <- [a,b,c,d,e]
character <- (a,b,c,d,e)
character <- ("a","b","c","d","e")
character <- c("a","b","c","d","e")
numeric <- c(1,2,3,4,5)
logical <- c(T,F,F,F,T)
factor <- c("Yes","No,"No","No","Yes")
factor <- c("Yes","No","No","No","Yes")
combined_df <- data.frame(character, numeric, logical, factor)
combined_df
names(data)
data()
is.character(combined_df[,1])
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n")
}
for i= 1:4 {
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n")
}
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat()
}
is.character(combined_df$character)
character <- c("a","b","c","d","e")
numeric <- c(1,2,3,4,5)
logical <- c(T,F,F,F,T)
factor <- c("Yes","No","No","No","Yes")
combined_df <- data.frame(character, numeric, logical, factor, stringsAsFactors = FALSE)
combined_df
names(data)
data()
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat()
}
combined_df$factor <- as.factor(combined_df$factor)
combined_df
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat() # basically prints the output
}
character <- c("a","b","c","d","e")
numeric <- c(1,2,3,4,5)
logical <- c(T,F,F,F,T)
factor <- c("Apple","Orange","Apple","Orange","Lemon")
combined_df <- data.frame(character, numeric, logical, factor, stringsAsFactors = FALSE)
combined_df$factor <- as.factor(combined_df$factor)
combined_df
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat() # basically prints the output
}
names(data)
data()
names(ToothGrowth)
data(ToothGrowth)
names(ToothGrowth)
View(ToothGrowth)
View(ToothGrowth)
data() # List internal data sets:
summary(ToothGrowth$len)
plot(ToothGrowth$len, ToothGrowth$dose)
hist(ToothGrowth$dose, ToothGrowth$len)
View(ToothGrowth)
hist(ToothGrowth$dose)
hist(ToothGrowth$dose)
plot(ToothGrowth$dose, ToothGrowth$len)
boxplot(ToothGrowth$dose, ToothGrowth$len)
plot(ToothGrowth$dose, ToothGrowth$len)
boxplot(ToothGrowth$dose, ToothGrowth$len)
hist(ToothGrowth$dose, main ="Dosage of Vitamin C given to Guinea Pigs")
hist(ToothGrowth$dose, main ="Dosage of Vitamin C given to Guinea Pigs", xlab = "Dosage")
plot(ToothGrowth$dose, ToothGrowth$len, mmain = "Effect of Vitamin C on Tooth Growth",
xlab = "Dosage", ylab = "Length")
boxplot(ToothGrowth$dose, ToothGrowth$len)
summary(ToothGrowth$len)
character <- c("a","b","c","d","e")
numeric <- c(1,2,3,4,5)
logical <- c(T,F,F,F,T)
factor <- factor("Apple","Orange","Apple","Orange","Lemon")
combined_df <- data.frame(character, numeric, logical, factor, stringsAsFactors = FALSE)
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat() # basically prints the output
}
character <- c("a","b","c","d","e")
numeric <- c(1,2,3,4,5)
logical <- c(T,F,F,F,T)
factor <- factor("Apple","Orange","Apple","Orange","Lemon")
combined_df <- data.frame(character, numeric, logical, factor, stringsAsFactors = FALSE)
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat() # basically prints the output
}
is.character(combined_df$factor)
?factor
factor <- factor(character)
combined_df <- data.frame(character, numeric, logical, factor, stringsAsFactors = FALSE)
for (i in 1:4) {
is.character(combined_df[,i]) %>%
paste(names(combined_df)[i], ., "\n") %>%
cat() # basically prints the output
}
boxplot(ToothGrowth$dose, ToothGrowth$len)
ToothGrowth <- data.matrix(ToothGrowth)
install.packages("heatmaply")
library(heatmaply)
heatmaply(ToothGrowth, k_col = 2, k_row = 3) %>% layout(margin = list(l = 130, b = 40))
heatmaply(ToothGrowth) %>% layout(margin = list(l = 130, b = 40))
install.packages("heatmaply")
install.packages("heatmaply")
library(heatmaply)
heatmaply(ToothGrowth) %>% layout(margin = list(l = 130, b = 40))
ls()
rm(list=ls()) # remove existing lists
data() # List internal data sets:
data() # List internal data sets:
data(ToothGrowth) #The Effect of Vitamin C on Tooth Growth in Guinea Pigs
names(ToothGrowth)
summary(ToothGrowth$len)
hist(ToothGrowth$dose, main ="Dosage of Vitamin C given to Guinea Pigs", xlab = "Dosage")
plot(ToothGrowth$dose, ToothGrowth$len, mmain = "Effect of Vitamin C on Tooth Growth",
xlab = "Dosage", ylab = "Length")
boxplot(ToothGrowth$dose, ToothGrowth$len)
URL <- paste0('https://github.com/fivethirtyeight/data/blob/master/tarantino/tarantino.csv')
download.file(URL, 'taratino.csv')
data <- read.table("taratino.csv", encoding="UTF8-MAC", sep=",", quote="",stringsAsFactors=FALSE)
View(data)
View(ToothGrowth)
setwd('/Users/tarunkhanna/Desktop/Collaborative Data Methods/VieiraKhanna_Assignment1')
URL <- paste0('https://github.com/fivethirtyeight/data/blob/master/tarantino/tarantino.csv')
download.file(URL, 'taratino.csv')
URL <- paste0('https://github.com/fivethirtyeight/data/tarantino/tarantino.csv')
download.file(URL, 'taratino.csv')
URL <- paste0('http://fivethirtyeight.com/features/complete-catalog-curses-deaths-quentin-tarantino-films)
download.file(URL, 'taratino.csv')
setwd('/Users/tarunkhanna/Desktop/Collaborative Data Methods/VieiraKhanna_Assignment1')
#The raw data behind the story [A Complete Catalog Of Every Time Someone Cursed Or Bled Out In A Quentin Tarantino Movie]
URL <- paste0('http://fivethirtyeight.com/features/complete-catalog-curses-deaths-quentin-tarantino-films)
download.file(URL, 'taratino.csv')
URL <- paste0('http://fivethirtyeight.com/features/complete-catalog-curses-deaths-quentin-tarantino-films')
download.file(URL, 'taratino.csv')
library(rio)
install.packages('rio')
tar <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/tarantino/tarantino.csv')
library(rio)
tar <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/tarantino/tarantino.csv')
View(tar)
data()
data(sleep)
names(sleep)
data(UCBAdmissions)
names(UCBAdmissions)
data(UKgas)
names(UKgas)
library(rio)
avengers <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/avengers/avengers.csv')
View(avengers)
source('~/.active-rstudio-document', echo=TRUE)
library(rio)
avengers <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/marriage/both_sexes.csv')
marriage <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/marriage/both_sexes.csv')
View(marriage)
plot(all)
plot(marriage$all)
View(data)
View(marriage)
names(marriage)
View(data)
View(marriage)
plot(marriage$all_2534)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(data = 'marriage', mapping = aes(year, all_2534)) + xlab('year) + ylab('% people who never married')
library(ggplot2)
ggplot(data = 'marriage', mapping = aes(year, all_2534)) + xlab('year) + ylab('% people who never married')
ggplot(data = 'marriage', mapping = aes(year, all_2534)) + xlab('year') + ylab('% people who never married')
View(marriage)
is.numeric(marriage$year)
is.numeric(marriage$all_2534)
is.character(marriage$all_2534)
ggplot(data = 'marriage', mapping = aes(year, all_2534)) + xlab('year') + ylab('% people who never married')
ggplot(data = marriage, mapping = aes(year, all_2534)) + xlab('year') + ylab('% people who never married')
View(data)
summary(marriage$all_2534)
ggplot(data = marriage, mapping = aes(year, all_2534)) + geom_line()+xlab('year') + ylab('% people who never married')
max(marriage$all_2534)
The proportion of men and women who never marry has been increasing in the US and has reached almost `max(marriage$all_2534, round = 2)*100`
max(marriage$all_2534, round = 2)*100
max(marriage$all_2534, round = 2)
max(marriage$all_2534, round = 0)
max(marriage$all_2534, round = 1)
max(marriage$all_2534, round = 1.00)
max(marriage$all_2534, round = 0.00)
max(marriage$all_2534, round = 0.00)*100
max(marriage$all_2534, round = 0.2)*100
max(marriage$all_2534, round = 2)*100
marriage <- import('https://raw.githubusercontent.com/fivethirtyeight/data/master/marriage/both_sexes.csv')
